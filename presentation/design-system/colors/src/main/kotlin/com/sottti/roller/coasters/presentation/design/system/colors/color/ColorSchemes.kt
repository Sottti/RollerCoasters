package com.sottti.roller.coasters.presentation.design.system.colors.color

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme

internal object ColorSchemes {
    internal object Light {
        internal val standardContrast = lightColorScheme(
            primary = ColorTokens.Light.StandardContrast.primary,
            onPrimary = ColorTokens.Light.StandardContrast.onPrimary,
            primaryContainer = ColorTokens.Light.StandardContrast.primaryContainer,
            onPrimaryContainer = ColorTokens.Light.StandardContrast.onPrimaryContainer,
            secondary = ColorTokens.Light.StandardContrast.secondary,
            onSecondary = ColorTokens.Light.StandardContrast.onSecondary,
            secondaryContainer = ColorTokens.Light.StandardContrast.secondaryContainer,
            onSecondaryContainer = ColorTokens.Light.StandardContrast.onSecondaryContainer,
            tertiary = ColorTokens.Light.StandardContrast.tertiary,
            onTertiary = ColorTokens.Light.StandardContrast.onTertiary,
            tertiaryContainer = ColorTokens.Light.StandardContrast.tertiaryContainer,
            onTertiaryContainer = ColorTokens.Light.StandardContrast.onTertiaryContainer,
            error = ColorTokens.Light.StandardContrast.error,
            onError = ColorTokens.Light.StandardContrast.onError,
            errorContainer = ColorTokens.Light.StandardContrast.errorContainer,
            onErrorContainer = ColorTokens.Light.StandardContrast.onErrorContainer,
            background = ColorTokens.Light.StandardContrast.background,
            onBackground = ColorTokens.Light.StandardContrast.onBackground,
            surface = ColorTokens.Light.StandardContrast.surface,
            onSurface = ColorTokens.Light.StandardContrast.onSurface,
            surfaceVariant = ColorTokens.Light.StandardContrast.surfaceVariant,
            onSurfaceVariant = ColorTokens.Light.StandardContrast.onSurfaceVariant,
            outline = ColorTokens.Light.StandardContrast.outline,
            outlineVariant = ColorTokens.Light.StandardContrast.outlineVariant,
            scrim = ColorTokens.Light.StandardContrast.scrim,
            inverseSurface = ColorTokens.Light.StandardContrast.inverseSurface,
            inverseOnSurface = ColorTokens.Light.StandardContrast.inverseOnSurface,
            inversePrimary = ColorTokens.Light.StandardContrast.inversePrimary,
            surfaceDim = ColorTokens.Light.StandardContrast.surfaceDim,
            surfaceBright = ColorTokens.Light.StandardContrast.surfaceBright,
            surfaceContainerLowest = ColorTokens.Light.StandardContrast.surfaceContainerLowest,
            surfaceContainerLow = ColorTokens.Light.StandardContrast.surfaceContainerLow,
            surfaceContainer = ColorTokens.Light.StandardContrast.surfaceContainer,
            surfaceContainerHigh = ColorTokens.Light.StandardContrast.surfaceContainerHigh,
            surfaceContainerHighest = ColorTokens.Light.StandardContrast.surfaceContainerHighest,
        )
        internal val mediumContrast = lightColorScheme(
            primary = ColorTokens.Light.MediumContrast.primaryMediumContrast,
            onPrimary = ColorTokens.Light.MediumContrast.onPrimaryMediumContrast,
            primaryContainer = ColorTokens.Light.MediumContrast.primaryContainerMediumContrast,
            onPrimaryContainer = ColorTokens.Light.MediumContrast.onPrimaryContainerMediumContrast,
            secondary = ColorTokens.Light.MediumContrast.secondaryMediumContrast,
            onSecondary = ColorTokens.Light.MediumContrast.onSecondaryMediumContrast,
            secondaryContainer = ColorTokens.Light.MediumContrast.secondaryContainerMediumContrast,
            onSecondaryContainer = ColorTokens.Light.MediumContrast.onSecondaryContainerMediumContrast,
            tertiary = ColorTokens.Light.MediumContrast.tertiaryMediumContrast,
            onTertiary = ColorTokens.Light.MediumContrast.onTertiaryMediumContrast,
            tertiaryContainer = ColorTokens.Light.MediumContrast.tertiaryContainerMediumContrast,
            onTertiaryContainer = ColorTokens.Light.MediumContrast.onTertiaryContainerMediumContrast,
            error = ColorTokens.Light.MediumContrast.errorMediumContrast,
            onError = ColorTokens.Light.MediumContrast.onErrorMediumContrast,
            errorContainer = ColorTokens.Light.MediumContrast.errorContainerMediumContrast,
            onErrorContainer = ColorTokens.Light.MediumContrast.onErrorContainerMediumContrast,
            background = ColorTokens.Light.MediumContrast.backgroundMediumContrast,
            onBackground = ColorTokens.Light.MediumContrast.onBackgroundMediumContrast,
            surface = ColorTokens.Light.MediumContrast.surfaceMediumContrast,
            onSurface = ColorTokens.Light.MediumContrast.onSurfaceMediumContrast,
            surfaceVariant = ColorTokens.Light.MediumContrast.surfaceVariantMediumContrast,
            onSurfaceVariant = ColorTokens.Light.MediumContrast.onSurfaceVariantMediumContrast,
            outline = ColorTokens.Light.MediumContrast.outlineMediumContrast,
            outlineVariant = ColorTokens.Light.MediumContrast.outlineVariantMediumContrast,
            scrim = ColorTokens.Light.MediumContrast.scrimMediumContrast,
            inverseSurface = ColorTokens.Light.MediumContrast.inverseSurfaceMediumContrast,
            inverseOnSurface = ColorTokens.Light.MediumContrast.inverseOnSurfaceMediumContrast,
            inversePrimary = ColorTokens.Light.MediumContrast.inversePrimaryMediumContrast,
            surfaceDim = ColorTokens.Light.MediumContrast.surfaceDimMediumContrast,
            surfaceBright = ColorTokens.Light.MediumContrast.surfaceBrightMediumContrast,
            surfaceContainerLowest = ColorTokens.Light.MediumContrast.surfaceContainerLowestMediumContrast,
            surfaceContainerLow = ColorTokens.Light.MediumContrast.surfaceContainerLowMediumContrast,
            surfaceContainer = ColorTokens.Light.MediumContrast.surfaceContainerMediumContrast,
            surfaceContainerHigh = ColorTokens.Light.MediumContrast.surfaceContainerHighMediumContrast,
            surfaceContainerHighest = ColorTokens.Light.MediumContrast.surfaceContainerHighestMediumContrast,
        )

        internal val highContrast = lightColorScheme(
            primary = ColorTokens.Light.HighContrast.primaryHighContrast,
            onPrimary = ColorTokens.Light.HighContrast.onPrimaryHighContrast,
            primaryContainer = ColorTokens.Light.HighContrast.primaryContainerHighContrast,
            onPrimaryContainer = ColorTokens.Light.HighContrast.onPrimaryContainerHighContrast,
            secondary = ColorTokens.Light.HighContrast.secondaryHighContrast,
            onSecondary = ColorTokens.Light.HighContrast.onSecondaryHighContrast,
            secondaryContainer = ColorTokens.Light.HighContrast.secondaryContainerHighContrast,
            onSecondaryContainer = ColorTokens.Light.HighContrast.onSecondaryContainerHighContrast,
            tertiary = ColorTokens.Light.HighContrast.tertiaryHighContrast,
            onTertiary = ColorTokens.Light.HighContrast.onTertiaryHighContrast,
            tertiaryContainer = ColorTokens.Light.HighContrast.tertiaryContainerHighContrast,
            onTertiaryContainer = ColorTokens.Light.HighContrast.onTertiaryContainerHighContrast,
            error = ColorTokens.Light.HighContrast.errorHighContrast,
            onError = ColorTokens.Light.HighContrast.onErrorHighContrast,
            errorContainer = ColorTokens.Light.HighContrast.errorContainerHighContrast,
            onErrorContainer = ColorTokens.Light.HighContrast.onErrorContainerHighContrast,
            background = ColorTokens.Light.HighContrast.backgroundHighContrast,
            onBackground = ColorTokens.Light.HighContrast.onBackgroundHighContrast,
            surface = ColorTokens.Light.HighContrast.surfaceHighContrast,
            onSurface = ColorTokens.Light.HighContrast.onSurfaceHighContrast,
            surfaceVariant = ColorTokens.Light.HighContrast.surfaceVariantHighContrast,
            onSurfaceVariant = ColorTokens.Light.HighContrast.onSurfaceVariantHighContrast,
            outline = ColorTokens.Light.HighContrast.outlineHighContrast,
            outlineVariant = ColorTokens.Light.HighContrast.outlineVariantHighContrast,
            scrim = ColorTokens.Light.HighContrast.scrimHighContrast,
            inverseSurface = ColorTokens.Light.HighContrast.inverseSurfaceHighContrast,
            inverseOnSurface = ColorTokens.Light.HighContrast.inverseOnSurfaceHighContrast,
            inversePrimary = ColorTokens.Light.HighContrast.inversePrimaryHighContrast,
            surfaceDim = ColorTokens.Light.HighContrast.surfaceDimHighContrast,
            surfaceBright = ColorTokens.Light.HighContrast.surfaceBrightHighContrast,
            surfaceContainerLowest = ColorTokens.Light.HighContrast.surfaceContainerLowestHighContrast,
            surfaceContainerLow = ColorTokens.Light.HighContrast.surfaceContainerLowHighContrast,
            surfaceContainer = ColorTokens.Light.HighContrast.surfaceContainerHighContrast,
            surfaceContainerHigh = ColorTokens.Light.HighContrast.surfaceContainerHighHighContrast,
            surfaceContainerHighest = ColorTokens.Light.HighContrast.surfaceContainerHighestHighContrast,
        )
    }

    internal object Dark {
        internal val standardContrast = darkColorScheme(
            primary = ColorTokens.Dark.StandardContrast.primary,
            onPrimary = ColorTokens.Dark.StandardContrast.onPrimary,
            primaryContainer = ColorTokens.Dark.StandardContrast.primaryContainer,
            onPrimaryContainer = ColorTokens.Dark.StandardContrast.onPrimaryContainer,
            secondary = ColorTokens.Dark.StandardContrast.secondary,
            onSecondary = ColorTokens.Dark.StandardContrast.onSecondary,
            secondaryContainer = ColorTokens.Dark.StandardContrast.secondaryContainer,
            onSecondaryContainer = ColorTokens.Dark.StandardContrast.onSecondaryContainer,
            tertiary = ColorTokens.Dark.StandardContrast.tertiary,
            onTertiary = ColorTokens.Dark.StandardContrast.onTertiary,
            tertiaryContainer = ColorTokens.Dark.StandardContrast.tertiaryContainer,
            onTertiaryContainer = ColorTokens.Dark.StandardContrast.onTertiaryContainer,
            error = ColorTokens.Dark.StandardContrast.error,
            onError = ColorTokens.Dark.StandardContrast.onError,
            errorContainer = ColorTokens.Dark.StandardContrast.errorContainer,
            onErrorContainer = ColorTokens.Dark.StandardContrast.onErrorContainer,
            background = ColorTokens.Dark.StandardContrast.background,
            onBackground = ColorTokens.Dark.StandardContrast.onBackground,
            surface = ColorTokens.Dark.StandardContrast.surface,
            onSurface = ColorTokens.Dark.StandardContrast.onSurface,
            surfaceVariant = ColorTokens.Dark.StandardContrast.surfaceVariant,
            onSurfaceVariant = ColorTokens.Dark.StandardContrast.onSurfaceVariant,
            outline = ColorTokens.Dark.StandardContrast.outline,
            outlineVariant = ColorTokens.Dark.StandardContrast.outlineVariant,
            scrim = ColorTokens.Dark.StandardContrast.scrim,
            inverseSurface = ColorTokens.Dark.StandardContrast.inverseSurface,
            inverseOnSurface = ColorTokens.Dark.StandardContrast.inverseOnSurface,
            inversePrimary = ColorTokens.Dark.StandardContrast.inversePrimary,
            surfaceDim = ColorTokens.Dark.StandardContrast.surfaceDim,
            surfaceBright = ColorTokens.Dark.StandardContrast.surfaceBright,
            surfaceContainerLowest = ColorTokens.Dark.StandardContrast.surfaceContainerLowest,
            surfaceContainerLow = ColorTokens.Dark.StandardContrast.surfaceContainerLow,
            surfaceContainer = ColorTokens.Dark.StandardContrast.surfaceContainer,
            surfaceContainerHigh = ColorTokens.Dark.StandardContrast.surfaceContainerHigh,
            surfaceContainerHighest = ColorTokens.Dark.StandardContrast.surfaceContainerHighest,
        )

        internal val mediumContrast = darkColorScheme(
            primary = ColorTokens.Dark.MediumContrast.primaryMediumContrast,
            onPrimary = ColorTokens.Dark.MediumContrast.onPrimaryMediumContrast,
            primaryContainer = ColorTokens.Dark.MediumContrast.primaryContainerMediumContrast,
            onPrimaryContainer = ColorTokens.Dark.MediumContrast.onPrimaryContainerMediumContrast,
            secondary = ColorTokens.Dark.MediumContrast.secondaryMediumContrast,
            onSecondary = ColorTokens.Dark.MediumContrast.onSecondaryMediumContrast,
            secondaryContainer = ColorTokens.Dark.MediumContrast.secondaryContainerMediumContrast,
            onSecondaryContainer = ColorTokens.Dark.MediumContrast.onSecondaryContainerMediumContrast,
            tertiary = ColorTokens.Dark.MediumContrast.tertiaryMediumContrast,
            onTertiary = ColorTokens.Dark.MediumContrast.onTertiaryMediumContrast,
            tertiaryContainer = ColorTokens.Dark.MediumContrast.tertiaryContainerMediumContrast,
            onTertiaryContainer = ColorTokens.Dark.MediumContrast.onTertiaryContainerMediumContrast,
            error = ColorTokens.Dark.MediumContrast.errorMediumContrast,
            onError = ColorTokens.Dark.MediumContrast.onErrorMediumContrast,
            errorContainer = ColorTokens.Dark.MediumContrast.errorContainerMediumContrast,
            onErrorContainer = ColorTokens.Dark.MediumContrast.onErrorContainerMediumContrast,
            background = ColorTokens.Dark.MediumContrast.backgroundMediumContrast,
            onBackground = ColorTokens.Dark.MediumContrast.onBackgroundMediumContrast,
            surface = ColorTokens.Dark.MediumContrast.surfaceMediumContrast,
            onSurface = ColorTokens.Dark.MediumContrast.onSurfaceMediumContrast,
            surfaceVariant = ColorTokens.Dark.MediumContrast.surfaceVariantMediumContrast,
            onSurfaceVariant = ColorTokens.Dark.MediumContrast.onSurfaceVariantMediumContrast,
            outline = ColorTokens.Dark.MediumContrast.outlineMediumContrast,
            outlineVariant = ColorTokens.Dark.MediumContrast.outlineVariantMediumContrast,
            scrim = ColorTokens.Dark.MediumContrast.scrimMediumContrast,
            inverseSurface = ColorTokens.Dark.MediumContrast.inverseSurfaceMediumContrast,
            inverseOnSurface = ColorTokens.Dark.MediumContrast.inverseOnSurfaceMediumContrast,
            inversePrimary = ColorTokens.Dark.MediumContrast.inversePrimaryMediumContrast,
            surfaceDim = ColorTokens.Dark.MediumContrast.surfaceDimMediumContrast,
            surfaceBright = ColorTokens.Dark.MediumContrast.surfaceBrightMediumContrast,
            surfaceContainerLowest = ColorTokens.Dark.MediumContrast.surfaceContainerLowestMediumContrast,
            surfaceContainerLow = ColorTokens.Dark.MediumContrast.surfaceContainerLowMediumContrast,
            surfaceContainer = ColorTokens.Dark.MediumContrast.surfaceContainerMediumContrast,
            surfaceContainerHigh = ColorTokens.Dark.MediumContrast.surfaceContainerHighMediumContrast,
            surfaceContainerHighest = ColorTokens.Dark.MediumContrast.surfaceContainerHighestMediumContrast,
        )

        internal val highContrast = darkColorScheme(
            primary = ColorTokens.Dark.HighContrast.primaryHighContrast,
            onPrimary = ColorTokens.Dark.HighContrast.onPrimaryHighContrast,
            primaryContainer = ColorTokens.Dark.HighContrast.primaryContainerHighContrast,
            onPrimaryContainer = ColorTokens.Dark.HighContrast.onPrimaryContainerHighContrast,
            secondary = ColorTokens.Dark.HighContrast.secondaryHighContrast,
            onSecondary = ColorTokens.Dark.HighContrast.onSecondaryHighContrast,
            secondaryContainer = ColorTokens.Dark.HighContrast.secondaryContainerHighContrast,
            onSecondaryContainer = ColorTokens.Dark.HighContrast.onSecondaryContainerHighContrast,
            tertiary = ColorTokens.Dark.HighContrast.tertiaryHighContrast,
            onTertiary = ColorTokens.Dark.HighContrast.onTertiaryHighContrast,
            tertiaryContainer = ColorTokens.Dark.HighContrast.tertiaryContainerHighContrast,
            onTertiaryContainer = ColorTokens.Dark.HighContrast.onTertiaryContainerHighContrast,
            error = ColorTokens.Dark.HighContrast.errorHighContrast,
            onError = ColorTokens.Dark.HighContrast.onErrorHighContrast,
            errorContainer = ColorTokens.Dark.HighContrast.errorContainerHighContrast,
            onErrorContainer = ColorTokens.Dark.HighContrast.onErrorContainerHighContrast,
            background = ColorTokens.Dark.HighContrast.backgroundHighContrast,
            onBackground = ColorTokens.Dark.HighContrast.onBackgroundHighContrast,
            surface = ColorTokens.Dark.HighContrast.surfaceHighContrast,
            onSurface = ColorTokens.Dark.HighContrast.onSurfaceHighContrast,
            surfaceVariant = ColorTokens.Dark.HighContrast.surfaceVariantHighContrast,
            onSurfaceVariant = ColorTokens.Dark.HighContrast.onSurfaceVariantHighContrast,
            outline = ColorTokens.Dark.HighContrast.outlineHighContrast,
            outlineVariant = ColorTokens.Dark.HighContrast.outlineVariantHighContrast,
            scrim = ColorTokens.Dark.HighContrast.scrimHighContrast,
            inverseSurface = ColorTokens.Dark.HighContrast.inverseSurfaceHighContrast,
            inverseOnSurface = ColorTokens.Dark.HighContrast.inverseOnSurfaceHighContrast,
            inversePrimary = ColorTokens.Dark.HighContrast.inversePrimaryHighContrast,
            surfaceDim = ColorTokens.Dark.HighContrast.surfaceDimHighContrast,
            surfaceBright = ColorTokens.Dark.HighContrast.surfaceBrightHighContrast,
            surfaceContainerLowest = ColorTokens.Dark.HighContrast.surfaceContainerLowestHighContrast,
            surfaceContainerLow = ColorTokens.Dark.HighContrast.surfaceContainerLowHighContrast,
            surfaceContainer = ColorTokens.Dark.HighContrast.surfaceContainerHighContrast,
            surfaceContainerHigh = ColorTokens.Dark.HighContrast.surfaceContainerHighHighContrast,
            surfaceContainerHighest = ColorTokens.Dark.HighContrast.surfaceContainerHighestHighContrast,
        )

    }
}