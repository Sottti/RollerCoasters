package com.sottti.roller.coasters.presentation.design.system.colors.color

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme

internal object ColorSchemes {
    internal object Light {
        internal val standardContrast = lightColorScheme(
            primary = ColorTokens.Light.StandardContrast.primary,
            onPrimary = ColorTokens.Light.StandardContrast.onPrimary,
            primaryContainer = ColorTokens.Light.StandardContrast.primaryContainer,
            onPrimaryContainer = ColorTokens.Light.StandardContrast.onPrimaryContainer,
            secondary = ColorTokens.Light.StandardContrast.secondary,
            onSecondary = ColorTokens.Light.StandardContrast.onSecondary,
            secondaryContainer = ColorTokens.Light.StandardContrast.secondaryContainer,
            onSecondaryContainer = ColorTokens.Light.StandardContrast.onSecondaryContainer,
            tertiary = ColorTokens.Light.StandardContrast.tertiary,
            onTertiary = ColorTokens.Light.StandardContrast.onTertiary,
            tertiaryContainer = ColorTokens.Light.StandardContrast.tertiaryContainer,
            onTertiaryContainer = ColorTokens.Light.StandardContrast.onTertiaryContainer,
            error = ColorTokens.Light.StandardContrast.error,
            onError = ColorTokens.Light.StandardContrast.onError,
            errorContainer = ColorTokens.Light.StandardContrast.errorContainer,
            onErrorContainer = ColorTokens.Light.StandardContrast.onErrorContainer,
            background = ColorTokens.Light.StandardContrast.background,
            onBackground = ColorTokens.Light.StandardContrast.onBackground,
            surface = ColorTokens.Light.StandardContrast.surface,
            onSurface = ColorTokens.Light.StandardContrast.onSurface,
            surfaceVariant = ColorTokens.Light.StandardContrast.surfaceVariant,
            onSurfaceVariant = ColorTokens.Light.StandardContrast.onSurfaceVariant,
            outline = ColorTokens.Light.StandardContrast.outline,
            outlineVariant = ColorTokens.Light.StandardContrast.outlineVariant,
            scrim = ColorTokens.Light.StandardContrast.scrim,
            inverseSurface = ColorTokens.Light.StandardContrast.inverseSurface,
            inverseOnSurface = ColorTokens.Light.StandardContrast.inverseOnSurface,
            inversePrimary = ColorTokens.Light.StandardContrast.inversePrimary,
            surfaceDim = ColorTokens.Light.StandardContrast.surfaceDim,
            surfaceBright = ColorTokens.Light.StandardContrast.surfaceBright,
            surfaceContainerLowest = ColorTokens.Light.StandardContrast.surfaceContainerLowest,
            surfaceContainerLow = ColorTokens.Light.StandardContrast.surfaceContainerLow,
            surfaceContainer = ColorTokens.Light.StandardContrast.surfaceContainer,
            surfaceContainerHigh = ColorTokens.Light.StandardContrast.surfaceContainerHigh,
            surfaceContainerHighest = ColorTokens.Light.StandardContrast.surfaceContainerHighest,
        )
        internal val mediumContrast = lightColorScheme(
            primary = ColorTokens.Light.MediumContrast.primary,
            onPrimary = ColorTokens.Light.MediumContrast.onPrimary,
            primaryContainer = ColorTokens.Light.MediumContrast.primaryContainer,
            onPrimaryContainer = ColorTokens.Light.MediumContrast.onPrimaryContainer,
            secondary = ColorTokens.Light.MediumContrast.secondary,
            onSecondary = ColorTokens.Light.MediumContrast.onSecondary,
            secondaryContainer = ColorTokens.Light.MediumContrast.secondaryContainer,
            onSecondaryContainer = ColorTokens.Light.MediumContrast.onSecondaryContainer,
            tertiary = ColorTokens.Light.MediumContrast.tertiary,
            onTertiary = ColorTokens.Light.MediumContrast.onTertiary,
            tertiaryContainer = ColorTokens.Light.MediumContrast.tertiaryContainer,
            onTertiaryContainer = ColorTokens.Light.MediumContrast.onTertiaryContainer,
            error = ColorTokens.Light.MediumContrast.error,
            onError = ColorTokens.Light.MediumContrast.onError,
            errorContainer = ColorTokens.Light.MediumContrast.errorContainer,
            onErrorContainer = ColorTokens.Light.MediumContrast.onErrorContainer,
            background = ColorTokens.Light.MediumContrast.background,
            onBackground = ColorTokens.Light.MediumContrast.onBackground,
            surface = ColorTokens.Light.MediumContrast.surface,
            onSurface = ColorTokens.Light.MediumContrast.onSurface,
            surfaceVariant = ColorTokens.Light.MediumContrast.surfaceVariant,
            onSurfaceVariant = ColorTokens.Light.MediumContrast.onSurfaceVariant,
            outline = ColorTokens.Light.MediumContrast.outline,
            outlineVariant = ColorTokens.Light.MediumContrast.outlineVariant,
            scrim = ColorTokens.Light.MediumContrast.scrim,
            inverseSurface = ColorTokens.Light.MediumContrast.inverseSurface,
            inverseOnSurface = ColorTokens.Light.MediumContrast.inverseOnSurface,
            inversePrimary = ColorTokens.Light.MediumContrast.inversePrimary,
            surfaceDim = ColorTokens.Light.MediumContrast.surfaceDim,
            surfaceBright = ColorTokens.Light.MediumContrast.surfaceBright,
            surfaceContainerLowest = ColorTokens.Light.MediumContrast.surfaceContainerLowest,
            surfaceContainerLow = ColorTokens.Light.MediumContrast.surfaceContainerLow,
            surfaceContainer = ColorTokens.Light.MediumContrast.surfaceContainer,
            surfaceContainerHigh = ColorTokens.Light.MediumContrast.surfaceContainerHigh,
            surfaceContainerHighest = ColorTokens.Light.MediumContrast.surfaceContainerHighest,
        )

        internal val highContrast = lightColorScheme(
            primary = ColorTokens.Light.HighContrast.primary,
            onPrimary = ColorTokens.Light.HighContrast.onPrimary,
            primaryContainer = ColorTokens.Light.HighContrast.primaryContainer,
            onPrimaryContainer = ColorTokens.Light.HighContrast.onPrimaryContainer,
            secondary = ColorTokens.Light.HighContrast.secondary,
            onSecondary = ColorTokens.Light.HighContrast.onSecondary,
            secondaryContainer = ColorTokens.Light.HighContrast.secondaryContainer,
            onSecondaryContainer = ColorTokens.Light.HighContrast.onSecondaryContainer,
            tertiary = ColorTokens.Light.HighContrast.tertiary,
            onTertiary = ColorTokens.Light.HighContrast.onTertiary,
            tertiaryContainer = ColorTokens.Light.HighContrast.tertiaryContainer,
            onTertiaryContainer = ColorTokens.Light.HighContrast.onTertiaryContainer,
            error = ColorTokens.Light.HighContrast.error,
            onError = ColorTokens.Light.HighContrast.onError,
            errorContainer = ColorTokens.Light.HighContrast.errorContainer,
            onErrorContainer = ColorTokens.Light.HighContrast.onErrorContainer,
            background = ColorTokens.Light.HighContrast.background,
            onBackground = ColorTokens.Light.HighContrast.onBackground,
            surface = ColorTokens.Light.HighContrast.surface,
            onSurface = ColorTokens.Light.HighContrast.onSurface,
            surfaceVariant = ColorTokens.Light.HighContrast.surfaceVariant,
            onSurfaceVariant = ColorTokens.Light.HighContrast.onSurfaceVariant,
            outline = ColorTokens.Light.HighContrast.outline,
            outlineVariant = ColorTokens.Light.HighContrast.outlineVariant,
            scrim = ColorTokens.Light.HighContrast.scrim,
            inverseSurface = ColorTokens.Light.HighContrast.inverseSurface,
            inverseOnSurface = ColorTokens.Light.HighContrast.inverseOnSurface,
            inversePrimary = ColorTokens.Light.HighContrast.inversePrimary,
            surfaceDim = ColorTokens.Light.HighContrast.surfaceDim,
            surfaceBright = ColorTokens.Light.HighContrast.surfaceBright,
            surfaceContainerLowest = ColorTokens.Light.HighContrast.surfaceContainerLowest,
            surfaceContainerLow = ColorTokens.Light.HighContrast.surfaceContainerLow,
            surfaceContainer = ColorTokens.Light.HighContrast.surfaceContainer,
            surfaceContainerHigh = ColorTokens.Light.HighContrast.surfaceContainerHigh,
            surfaceContainerHighest = ColorTokens.Light.HighContrast.surfaceContainerHighest,
        )
    }

    internal object Dark {
        internal val standardContrast = darkColorScheme(
            primary = ColorTokens.Dark.StandardContrast.primary,
            onPrimary = ColorTokens.Dark.StandardContrast.onPrimary,
            primaryContainer = ColorTokens.Dark.StandardContrast.primaryContainer,
            onPrimaryContainer = ColorTokens.Dark.StandardContrast.onPrimaryContainer,
            secondary = ColorTokens.Dark.StandardContrast.secondary,
            onSecondary = ColorTokens.Dark.StandardContrast.onSecondary,
            secondaryContainer = ColorTokens.Dark.StandardContrast.secondaryContainer,
            onSecondaryContainer = ColorTokens.Dark.StandardContrast.onSecondaryContainer,
            tertiary = ColorTokens.Dark.StandardContrast.tertiary,
            onTertiary = ColorTokens.Dark.StandardContrast.onTertiary,
            tertiaryContainer = ColorTokens.Dark.StandardContrast.tertiaryContainer,
            onTertiaryContainer = ColorTokens.Dark.StandardContrast.onTertiaryContainer,
            error = ColorTokens.Dark.StandardContrast.error,
            onError = ColorTokens.Dark.StandardContrast.onError,
            errorContainer = ColorTokens.Dark.StandardContrast.errorContainer,
            onErrorContainer = ColorTokens.Dark.StandardContrast.onErrorContainer,
            background = ColorTokens.Dark.StandardContrast.background,
            onBackground = ColorTokens.Dark.StandardContrast.onBackground,
            surface = ColorTokens.Dark.StandardContrast.surface,
            onSurface = ColorTokens.Dark.StandardContrast.onSurface,
            surfaceVariant = ColorTokens.Dark.StandardContrast.surfaceVariant,
            onSurfaceVariant = ColorTokens.Dark.StandardContrast.onSurfaceVariant,
            outline = ColorTokens.Dark.StandardContrast.outline,
            outlineVariant = ColorTokens.Dark.StandardContrast.outlineVariant,
            scrim = ColorTokens.Dark.StandardContrast.scrim,
            inverseSurface = ColorTokens.Dark.StandardContrast.inverseSurface,
            inverseOnSurface = ColorTokens.Dark.StandardContrast.inverseOnSurface,
            inversePrimary = ColorTokens.Dark.StandardContrast.inversePrimary,
            surfaceDim = ColorTokens.Dark.StandardContrast.surfaceDim,
            surfaceBright = ColorTokens.Dark.StandardContrast.surfaceBright,
            surfaceContainerLowest = ColorTokens.Dark.StandardContrast.surfaceContainerLowest,
            surfaceContainerLow = ColorTokens.Dark.StandardContrast.surfaceContainerLow,
            surfaceContainer = ColorTokens.Dark.StandardContrast.surfaceContainer,
            surfaceContainerHigh = ColorTokens.Dark.StandardContrast.surfaceContainerHigh,
            surfaceContainerHighest = ColorTokens.Dark.StandardContrast.surfaceContainerHighest,
        )

        internal val mediumContrast = darkColorScheme(
            primary = ColorTokens.Dark.MediumContrast.primary,
            onPrimary = ColorTokens.Dark.MediumContrast.onPrimary,
            primaryContainer = ColorTokens.Dark.MediumContrast.primaryContainer,
            onPrimaryContainer = ColorTokens.Dark.MediumContrast.onPrimaryContainer,
            secondary = ColorTokens.Dark.MediumContrast.secondary,
            onSecondary = ColorTokens.Dark.MediumContrast.onSecondary,
            secondaryContainer = ColorTokens.Dark.MediumContrast.secondaryContainer,
            onSecondaryContainer = ColorTokens.Dark.MediumContrast.onSecondaryContainer,
            tertiary = ColorTokens.Dark.MediumContrast.tertiary,
            onTertiary = ColorTokens.Dark.MediumContrast.onTertiary,
            tertiaryContainer = ColorTokens.Dark.MediumContrast.tertiaryContainer,
            onTertiaryContainer = ColorTokens.Dark.MediumContrast.onTertiaryContainer,
            error = ColorTokens.Dark.MediumContrast.error,
            onError = ColorTokens.Dark.MediumContrast.onError,
            errorContainer = ColorTokens.Dark.MediumContrast.errorContainer,
            onErrorContainer = ColorTokens.Dark.MediumContrast.onErrorContainer,
            background = ColorTokens.Dark.MediumContrast.background,
            onBackground = ColorTokens.Dark.MediumContrast.onBackground,
            surface = ColorTokens.Dark.MediumContrast.surface,
            onSurface = ColorTokens.Dark.MediumContrast.onSurface,
            surfaceVariant = ColorTokens.Dark.MediumContrast.surfaceVariant,
            onSurfaceVariant = ColorTokens.Dark.MediumContrast.onSurfaceVariant,
            outline = ColorTokens.Dark.MediumContrast.outline,
            outlineVariant = ColorTokens.Dark.MediumContrast.outlineVariant,
            scrim = ColorTokens.Dark.MediumContrast.scrim,
            inverseSurface = ColorTokens.Dark.MediumContrast.inverseSurface,
            inverseOnSurface = ColorTokens.Dark.MediumContrast.inverseOnSurface,
            inversePrimary = ColorTokens.Dark.MediumContrast.inversePrimary,
            surfaceDim = ColorTokens.Dark.MediumContrast.surfaceDim,
            surfaceBright = ColorTokens.Dark.MediumContrast.surfaceBright,
            surfaceContainerLowest = ColorTokens.Dark.MediumContrast.surfaceContainerLowest,
            surfaceContainerLow = ColorTokens.Dark.MediumContrast.surfaceContainerLow,
            surfaceContainer = ColorTokens.Dark.MediumContrast.surfaceContainer,
            surfaceContainerHigh = ColorTokens.Dark.MediumContrast.surfaceContainerHigh,
            surfaceContainerHighest = ColorTokens.Dark.MediumContrast.surfaceContainerHighest,
        )

        internal val highContrast = darkColorScheme(
            primary = ColorTokens.Dark.HighContrast.primary,
            onPrimary = ColorTokens.Dark.HighContrast.onPrimary,
            primaryContainer = ColorTokens.Dark.HighContrast.primaryContainer,
            onPrimaryContainer = ColorTokens.Dark.HighContrast.onPrimaryContainer,
            secondary = ColorTokens.Dark.HighContrast.secondary,
            onSecondary = ColorTokens.Dark.HighContrast.onSecondary,
            secondaryContainer = ColorTokens.Dark.HighContrast.secondaryContainer,
            onSecondaryContainer = ColorTokens.Dark.HighContrast.onSecondaryContainer,
            tertiary = ColorTokens.Dark.HighContrast.tertiary,
            onTertiary = ColorTokens.Dark.HighContrast.onTertiary,
            tertiaryContainer = ColorTokens.Dark.HighContrast.tertiaryContainer,
            onTertiaryContainer = ColorTokens.Dark.HighContrast.onTertiaryContainer,
            error = ColorTokens.Dark.HighContrast.error,
            onError = ColorTokens.Dark.HighContrast.onError,
            errorContainer = ColorTokens.Dark.HighContrast.errorContainer,
            onErrorContainer = ColorTokens.Dark.HighContrast.onErrorContainer,
            background = ColorTokens.Dark.HighContrast.background,
            onBackground = ColorTokens.Dark.HighContrast.onBackground,
            surface = ColorTokens.Dark.HighContrast.surface,
            onSurface = ColorTokens.Dark.HighContrast.onSurface,
            surfaceVariant = ColorTokens.Dark.HighContrast.surfaceVariant,
            onSurfaceVariant = ColorTokens.Dark.HighContrast.onSurfaceVariant,
            outline = ColorTokens.Dark.HighContrast.outline,
            outlineVariant = ColorTokens.Dark.HighContrast.outlineVariant,
            scrim = ColorTokens.Dark.HighContrast.scrim,
            inverseSurface = ColorTokens.Dark.HighContrast.inverseSurface,
            inverseOnSurface = ColorTokens.Dark.HighContrast.inverseOnSurface,
            inversePrimary = ColorTokens.Dark.HighContrast.inversePrimary,
            surfaceDim = ColorTokens.Dark.HighContrast.surfaceDim,
            surfaceBright = ColorTokens.Dark.HighContrast.surfaceBright,
            surfaceContainerLowest = ColorTokens.Dark.HighContrast.surfaceContainerLowest,
            surfaceContainerLow = ColorTokens.Dark.HighContrast.surfaceContainerLow,
            surfaceContainer = ColorTokens.Dark.HighContrast.surfaceContainer,
            surfaceContainerHigh = ColorTokens.Dark.HighContrast.surfaceContainerHigh,
            surfaceContainerHighest = ColorTokens.Dark.HighContrast.surfaceContainerHighest,
        )

    }
}